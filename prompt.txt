### エモパレ：感情記録アプリの生成プロンプト

```
あなたはPythonのWebアプリケーション開発の専門家であり、ユーザーフレンドリーでモダンなUIを持つアプリケーションの構築に長けています。

以下の要件を厳守し、「エモパレ」という感情記録Webアプリケーションの全コードを生成してください。

---
**アプリケーションの目的:**
ユーザーが日々の感情を記録し、その記録が視覚的に美しいカラーパレットやグラフとして表示されることで、自分の感情の傾向を振り返ることができるアプリ。

---
**コア要件:**

1.  **アプリケーション名:** エモパレ (Emopale)
2.  **使用技術スタック:**
    * **バックエンド:** Python (Flaskを推奨。シンプルで学習に適しているため)
    * **データベース:** SQLite (ファイルベースでスタンドアロン動作に適しているため)
    * **フロントエンド:** HTML, CSS, JavaScript (サーバーサイドレンダリングを基本とする。モダンなUIを実現するため、必要に応じてVanilla JSや軽量なJSライブラリ（Chart.jsなど）を利用しても良いが、ReactやVueなどのSPAフレームワークは使用しないこと。)
3.  **アーキテクチャ:**
    * アプリサーバーがHTMLを返す、クラシックなWebアプリケーション構成とする。
    * 全機能がローカルPC上でスタンドアロンで動作すること。外部APIは基本的に使用しない。
4.  **UI/UXのコンセプト:**
    * **モダンで美しいデザイン:** ミニマルで洗練されたデザインを重視し、感情を表現する色やアイコンが映えるようにすること。
    * **直感的な操作性:** 感情の記録、過去の記録の表示などが簡単に行えること。
    * **視覚化:** 記録された感情データは、単なるリスト表示だけでなく、カラーパレットやシンプルなグラフ（例: 月ごとの感情の割合、日ごとの感情の推移など）で視覚的に表現されること。
    * **面白い要素:** 感情記録自体が楽しくなるような工夫（例: 記録後に表示される小さなアニメーション、その日の感情を表現する一言メッセージなど）を検討すること。

---
**機能要件:**

1.  **感情の記録機能:**
    * ユーザーは日付を選択し、その日の感情を記録できる。
    * 感情は、あらかじめ定義されたカテゴリ（例: 喜び、怒り、悲しみ、穏やか、興奮など5～7種類）から選択できる。各感情に色とアイコンを割り当てること。
    * 感情に加えて、簡単なメモ（任意）を入力できるテキストフィールドを提供すること。
    * 記録は毎日1回のみ行える設計とすること（上書きは可）。
2.  **感情履歴の閲覧機能:**
    * カレンダー形式で過去の記録を表示し、特定の日付の記録を選択して詳細を確認できること。
    * 月ごと、または期間を指定して、記録された感情の推移や傾向をカラーパレットやグラフで視覚的に表示できること。
    * 過去の記録を編集・削除できる機能。
3.  **データ永続化:**
    * 記録された感情データはSQLiteデータベースに保存すること。
    * データベーススキーマを適切に設計すること。テーブルは「記録日」「感情タイプ」「メモ」「感情に紐づく色/アイコン（FKまたは直接保持）」などを含むこと。
4.  **スタンドアロン実行:**
    * 必要なライブラリのインストール手順（例: `pip install Flask`）を含め、ユーザーがダウンロード後すぐにローカル環境で実行できるような手順を提示すること。
    * アプリケーション起動スクリプト（例: `app.py`）を含めること。

---
**生成物:**

* **完全なソースコード:**
    * `app.py` (Flaskアプリケーションのメインファイル)
    * `templates/` ディレクトリ内のHTMLファイル (例: `index.html`, `record.html`, `history.html`)
    * `static/` ディレクトリ内のCSSファイル (例: `style.css`)
    * `static/` ディレクトリ内のJavaScriptファイル (例: `script.js` - チャート描画やUI制御用)
* **データベース初期化スクリプト/コード:** アプリケーション初回起動時に`emopale.db`というSQLiteデータベースを自動生成し、必要なテーブルを作成するコード。
* **README.md:** アプリケーションの概要、セットアップ方法、実行方法、基本的な使い方を記述した詳細なREADMEファイル。

---
**その他:**
* コメントを適切に記述し、コードの可読性を高めること。
* エラーハンドリングやセキュリティ（XSS対策など）についても、学習アプリとして適切な範囲で考慮すること。
* モダンなCSS（Flexbox, Gridなど）や、シンプルなJavaScriptアニメーションも積極的に取り入れて、ユーザー体験を向上させること。
* 生成AIが選択した感情カテゴリ、色、アイコンの例をコード内に含めること。

以上の要件に基づき、「エモパレ」アプリケーションの完全なコードとドキュメントを生成してください。
```